## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# Installer files
Installer/Files/
Installer/*.msi
Installer/installer.wixpdb
Installer/installer.wixobj
Installer/readme_files/
Installer/WixObj/
Installer/Msis
Installer/Support
Bootstrapper/WixObj
Bootstrapper/Release
oss-licenses.wxs

# User-specific files
*.suo
*.user
!*.user/
*.vcxproj.user
*.sln.docstates
*.VC.db

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/

# Roslyn cache directories
*.ide/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

#NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile
*.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding addin-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover
*.snap
# However, allow Jest snapshot files
!/RedGate.SqlClone.Client.Web/**/*.snap

# NCrunch
_NCrunch_*
.*crunch*.local.xml

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings 
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# If using the old MSBuild-Integrated Package Restore, uncomment this:
#!**/packages/repositories.config

# Windows Azure Build Output
csx/
*.build.csdef

# Windows Store app package directory
AppPackages/

# Others
*.Cache
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/
.kateproject.d/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
# Backup*/     # We actually have a folder called Backup...
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# npm output
package-lock.json

# Build logs
.logs/
.vs/
PrecompiledWeb/
Installer/Logs/

*.exe
*.dll
*.msi
*Results.xml
.vagrant
*.dcvr*
report.html
report/
dist/
*.ncrunchproject
*.wixobj

.DS_STORE

# Ignore WebStorm et al.
.idea

-npm-debug.log.*
installerMaker.txt

# RedGate Build system
**/.build/paket.lock
**/.paket/paket.exe
!**/.paket/paket.bootstrapper.exe

# Vagrant Test files
/.build/metrics/*.json
/.build/vagrant/SystemTests/*.xml
/.build/vagrant/SystemTests/RedGate.SqlClone.*
/.build/vagrant/version.txt
/.build/vagrant/SQL Clone Logs/
/.build/vagrant/PowerShellCmdletTests/*.xml
/.build/vagrant/PowerShellCmdletTests/*.pdb
/.build/vagrant/PowerShellCmdletTests/*.dll
/.build/vagrant/PowerShellCmdletTests/*.exe
/.build/vagrant/PowerShellCmdletTests/*.config
/.build/vagrant/eventlog.evtx

# NCrunch
*nCrunchTemp_*.csproj

# Web UI tests
/RedGate.SqlClone.Client.Web.Tests/reports
/.build/vagrant/WebEnvironment
/.build/vagrant/WebTestResults/
/.build/vagrant/WebTests
/.build/vagrant/paket.lock
/.build/vagrant/paket.dependencies
/.build/vagrant/.paket/paket.targets
/.build/vagrant/.paket/paket.bootstrapper.exe
/.build/vagrant/RedGate.ThirdParty.NodeJs
/RedGate.SqlClone.Client.Web/coverage/

# SonarQube
**/.sonarqube/*

# Terraform
.build/devcloud/.terraform/
.build/devcloud/*.tfstate*
.build/devcloud/randomkey
.build/paket-files/
/RedGate.SqlClone.Client.Web/demo
_ReSharper.Caches
